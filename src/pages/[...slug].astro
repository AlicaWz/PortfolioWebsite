---
import Layout from "@components/core/layout.astro";
import { useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";


export const prerender = true;

export async function getStaticPaths() {
  let languages = ['default', 'de']
  const storyblokApi = useStoryblokApi()
  const links = await storyblokApi.getAll('cdn/links', {
    version:
      (import.meta.env.STORYBLOK_IS_PREVIEW ||
        process.env.STORYBLOK_IS_PREVIEW) === "yes"
        ? "draft"
        : "published",
  })
  let paths: { props: any; params: { slug: string } }[] = []
  links
    .filter((link) => !link.is_folder)
    .forEach((link: { slug: string }) => {
      languages.forEach((language) => {
        let slug = link.slug === 'home' ? undefined : link.slug
        let full_url = language === 'default' ? slug : `${language}/${slug ?? ''}`
        let langSwitch = {}
        languages.forEach((lang) => {
          langSwitch = {
            ...langSwitch,
            [lang]: lang === 'default' ? `/${slug ?? ''}` : `/${lang}/${slug ?? ''}`,
          }
        })
        paths.push({
          props: { language, slug, langSwitch },
          params: {
            slug: full_url,
          },
        })
        console.log("paths", paths)
      })
    })
  return paths
}

const { slug, language, langSwitch } = Astro.props
const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get(
  `cdn/stories/${slug === undefined ? 'home' : slug}`,
  {
    version:
      (import.meta.env.STORYBLOK_IS_PREVIEW ||
        process.env.STORYBLOK_IS_PREVIEW) === "yes"
        ? "draft"
        : "published",
    language,
  }
)

/* const { data } = await storyblokApi
  .get(`cdn/stories/${getSlug(slug)}`, {
    content_type: "p1Generic",
    resolve_relations: "stories",
    version:
      (import.meta.env.STORYBLOK_IS_PREVIEW ||
        process.env.STORYBLOK_IS_PREVIEW) === "yes"
        ? "draft"
        : "published",
  })
  .catch((error) => {
    console.log("Error", error);
    return { data: null };
  });

if (data === null) {
  return new Response("Not found", { status: 404 });
} */
const story = data.story

console.log("data", data)

const metaData = {
  metaTitle: story.content.metaTitle ? story.content.metaTitle : "",
  metaDescription: story.content.metaDescription
    ? story.content.metaDescription
    : "",
  metaImage: story.content.ogImage?.filename
    ? story.content.ogImage?.filename
    : "",
  noIndex: story.content.noIndex ? story.content.noIndex : false,
};
---

<Layout meta={metaData} langSwitch={langSwitch} language={language}>
  <StoryblokComponent blok={story.content} />
</Layout>
