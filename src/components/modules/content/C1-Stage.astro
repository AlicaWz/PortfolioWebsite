---
import Button, { type ButtonProps } from "@components/library/Button.astro";
import IconButton, {
  type IconButtonProps,
} from "@components/library/IconButton.astro";
import type { ImageProps } from "@components/modules/content/C3-Image.astro";
import C3Image from "@components/modules/content/C3-Image.astro";
import Tag, { type TagProps } from "@components/library/Tag.astro";
import { storyblokEditable } from "@storyblok/astro";
import type { IComponentDefaults } from "@system/utils/types";

export interface C1StageProps extends IComponentDefaults {
  tags: TagProps[];
  headline: string;
  button: ButtonProps[];
  linkedInButton: IconButtonProps[];
  image: ImageProps;
}

export interface Props {
  blok: C1StageProps;
}

const { blok } = Astro.props;
const { tags, headline, button, linkedInButton, image } = blok;
---

<section
  aria-label="Stage"
  class="c1-stage col-span-4 lg-col-span-10"
  {...storyblokEditable(blok)}
  id={blok._uid}
>
  <div class="lg-leftside col-span-4 md-col-span-2 lg-col-span-6">
    {
      !!tags && (
        <div class="tags">
          {tags.map((tag) => (
            <Tag {...tag} />
          ))}
        </div>
      )
    }
    <h1>{headline}</h1>
    <div class="button-wrapper">
      {!!button && button.map((button) => <Button {...button} />)}
      {
        !!linkedInButton &&
          linkedInButton.map((linkedInButton) => (
            <IconButton {...linkedInButton} />
          ))
      }
    </div>
  </div>
  {
    !!image && (
      <C3Image
        gridSmall={{ start: 1, span: 4 }}
        gridMedium={{ start: 3, span: 2 }}
        gridLarge={{ start: 8, span: 3 }}
        image={image}
        inferSize={true}
      />
    )
  }
</section>

<style>
  .c1-stage {
    align-items: end;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 16px;

    @media (--medium-viewport) {
        gap: 24px;
    }

    @media (--large-viewport) {
      grid-template-columns: repeat(10, 1fr);
    }
  }

  .lg-leftside {
    display: flex;
    flex-direction: column;

    & > *:not(:last-child) {
      margin-bottom: 16px;
    }

    & > *:nth-last-child(2) {
        margin-bottom: 48px;
    }

    & > *:last-child {
      margin-bottom: 0px;
    }
  }
  .tags {
    display: flex;
    gap: 8px;
  }

  .button-wrapper {
    display: flex;
    gap: 16px;
  }
</style>
