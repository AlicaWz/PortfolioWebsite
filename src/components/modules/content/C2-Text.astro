---
import ArrowLink, { type ArrowLinkProps } from "@components/library/ArrowLink.astro";
import type { IComponentDefaults, RichtextStoryblok } from "@system/utils/types";
import { renderRichText, storyblokEditable } from "@storyblok/astro";


export interface C2TextProps extends IComponentDefaults {
    theme: "default" | "light-theme"
    headline: string
    copy: RichtextStoryblok
    textalignment: "left" | "center"
    seeAllLink: ArrowLinkProps[]
}

export interface Props {
    blok: C2TextProps
}

const { blok } = Astro.props
const { headline, textalignment, seeAllLink } = blok

const copy: string = renderRichText(blok.copy) || '';
console.log("Link", seeAllLink)
---

<section
    aria-label="Text"
    class={`c2-text col-span-4 md-col-span-2 lg-col-span-6`}
    {...storyblokEditable(blok)}
    id={blok._uid}
>
    <h2>{headline}</h2>
    <div class=`copy text-${textalignment}`>
        {copy}
    </div>
    {
        !!seeAllLink && seeAllLink.map((link) => (
            <ArrowLink {...link} variant="arrow-right" arrowPos="above" />
            <ArrowLink {...link} variant="arrow-left" arrowPos="under" />
            <ArrowLink {...link} variant="arrow-up" arrowPos="leftSide" labelPos="label-down" />
            <ArrowLink {...link} variant="arrow-down" arrowPos="leftSide" labelPos="label-up"/>
        ))
    }
</section>

<style>
    section {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 24px;
        border-radius: 24px;
        background-color: var(--color-neutral-stonegrey); 

        .light-theme {
            background-color: var(--color-neutral-white);
        }
    }

    .text-left {
        text-align: left;
    }

    .text-center {
        text-align: center;
    }
</style>




